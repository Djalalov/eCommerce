{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; //Reducers\n\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { getProductsReducer, getProductDetailsReducer } from \"./reducers/productReducers\";\n\nconst thunkMiddleware = require(\"redux-thunk\").default;\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer\n}); //const middleware = { thunk };\n\nconst cartFromLocalStorage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst INITIAL_STATE = {\n  cart: {\n    cartItems: cartFromLocalStorage\n  }\n};\nconst store = createStore(reducer, INITIAL_STATE, composeWithDevTools(applyMiddleware(thunkMiddleware)));\nexport default store;","map":{"version":3,"sources":["/home/el/projects/eCommerce/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","cartReducer","getProductsReducer","getProductDetailsReducer","thunkMiddleware","require","default","reducer","cart","getProducts","getProductDetails","cartFromLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACCC,kBADD,EAECC,wBAFD,QAGO,4BAHP;;AAKA,MAAMC,eAAe,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA/C;;AAEA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC/BU,EAAAA,IAAI,EAAEP,WADyB;AAE/BQ,EAAAA,WAAW,EAAEP,kBAFkB;AAG/BQ,EAAAA,iBAAiB,EAAEP;AAHY,CAAD,CAA/B,C,CAMA;;AAEA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAD0B,GAE1B,EAFH;AAIA,MAAMG,aAAa,GAAG;AACrBR,EAAAA,IAAI,EAAE;AACLS,IAAAA,SAAS,EAAEN;AADN;AADe,CAAtB;AAMA,MAAMO,KAAK,GAAGrB,WAAW,CACxBU,OADwB,EAExBS,aAFwB,EAGxBhB,mBAAmB,CAACD,eAAe,CAACK,eAAD,CAAhB,CAHK,CAAzB;AAMA,eAAec,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//Reducers\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n\tgetProductsReducer,\n\tgetProductDetailsReducer,\n} from \"./reducers/productReducers\";\n\nconst thunkMiddleware = require(\"redux-thunk\").default;\n\nconst reducer = combineReducers({\n\tcart: cartReducer,\n\tgetProducts: getProductsReducer,\n\tgetProductDetails: getProductDetailsReducer,\n});\n\n//const middleware = { thunk };\n\nconst cartFromLocalStorage = localStorage.getItem(\"cart\")\n\t? JSON.parse(localStorage.getItem(\"cart\"))\n\t: [];\n\nconst INITIAL_STATE = {\n\tcart: {\n\t\tcartItems: cartFromLocalStorage,\n\t},\n};\n\nconst store = createStore(\n\treducer,\n\tINITIAL_STATE,\n\tcomposeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}